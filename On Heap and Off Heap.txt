On Heap and Off Heap Memory

1. One Executor per worker node
2. JVM controls onHeap memory.
3. OS controls Off-Heap memory.
4. Executor has onHeap memory.
5. Unified Memory Management(UMM) = 60% of on-heap memory.
6. UMM = 50% execution memory and 50% Storage memory
7. User Memory = 40% of on-heap memory.
8. Reserved Memory ~ 300 Mb
9. Each Executor within worker node has access to Off-Heap memory.
10. Amount of Off-Heap memory stored is spark.memory.offHeap.size
11. To enable offHeap memory, set spark.memory.offHeap.use to True.
12. Accessing Off-Heap memory is slower than on-Heap memory.
13. No Overhead of Garbage Collector incase of Off-Heap, but need to call GC scans in case of On-heap memory
